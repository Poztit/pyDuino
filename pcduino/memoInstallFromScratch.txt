# Memo procedure installation à partir installation distro Lubuntu pcduino
# par X. HINAULT - www.mon-club-elec.fr
# en attendant de faire un script de post install...

###################### version "essentiel" #####################
# paquets indisp d'emblee
sudo apt-get install geany --yes (7MB)
config geany pour espace et tab (view>editor>) et diminuer police (Edit>preferences>interface)

# install VNC d'emblee (dejà installé...)
sudo apt-get install vino --yes
vino-preferences (pas sudo +++)
/usr/lib/vino/vino-server (pas sudo)

# ouvrir un autre terminal : ifconfig
=> tester depuis client : xtightvncviewer <ip.pc.dui.no> -compresslevel 3

# ensuite on reprend sur le pcduino :
sudo geany /etc/xdg/lxsession/Lubuntu/autostart
@/usr/lib/vino/vino-server

# enregistrer, quitter et rebooter
# se reconnecter depuis le pcfixe : si OK : vous pouvez débrancher écran, clavier, souris


###################### version détaillée ########################

# on présuppose ici kernel et système fichier installés au préalable : voir procédure séparée.

# 1er boot = écran de config
# une fois boot ok - redémarrer une 2eme fois
# pendant le boot, il est possible par appuyer F8 d'ouvrir le menu de config

# une première chose : ouvrir navigateur fichier et regarder dans le bas à droite la place dispo en NAND...
# quelque chose comme 580 Mo free / 1.9 Go : ayez conscience de la place limitée en mémoire NAND... 
# ... mais largement suffisante en la jouant "fine". Suivez le guide.

# adaptation LXDE
tableau de bord en haut
ajout moniteur systeme 
ajout dans lancement rapide : lxterm et virer chromium
preferences lxterm : modifier police à 8 

desactiver economisateur d'ecran : App > Preferences > ScreenSaver > mettre sur desactiver

# param initial
clavier : rien si fait au 1er boot - sinon: sudo dpkg-reconfigure keyboard-configuration
langue fr : sudo apt-get install language-pack-fr
maj liste paquets : sudo apt-get update (et pas upgrade !)
enleve paquets inutiles : sudo apt-get autoremove

# paquets indisp d'emblee
sudo apt-get install geany --yes (7MB)
config geany pour espace et tab (view>editor>) et diminuer police (Edit>preferences>interface)

# install VNC d'emblee (dejà installé...)
sudo apt-get install vino --yes
vino-preferences (pas sudo +++)
/usr/lib/vino/vino-server (pas sudo)

# ouvrir un autre terminal : ifconfig
=> tester depuis client : xtightvncviewer <ip.pc.dui.no> -compresslevel 3

# ensuite on reprend sur le pcduino :
sudo geany /etc/xdg/lxsession/Lubuntu/autostart
@/usr/lib/vino/vino-server

# enregistrer, quitter et rebooter
# se reconnecter depuis le pcfixe : si OK : vous pouvez débrancher écran, clavier, souris

###### à partir de maintenant vous pouvez travailler uniquement à partir du PC fixe #######
# la suite se déroule dans la fenêtre VNC : vous travaillez sur le pcduino depuis le poste fixe !

# logiciels utilesà installer :
sudo apt-get install htop --yes (0,140MB)
> on peut lancer htop avec la commande $ htop et voir l'état du système : RAM 73Mo (top!) usage moyen CPU (8% via VNC)
> quitter avec q
sudo apt-get install xarchiver --yes (1,4MB)
sudo apt-get install git --yes (10MB)
sudo apt-get install midori --yes (50MB)
sudo apt-get install gdebi --yes (5MB)
sudo apt-get install cbm --yes (moniteur bande passante réseau) 
+/- sudo apt-get install bluefish --yes (22MB)  Editeur html 
+/- sudo apt-get install gnome-disk-utility --yes 

# +/- enlever ce qui ne sert a rien - pas obligatoire - pourra être fait à tout moment ultérieurement 
liste occupation disques : df -h  => voir la NAND restante libre : environ 500Mo libre...
liste paquets lourds : dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n
sudo apt-get remove pcduino-arduino-ide --yes
sudo apt-get remove pcduino-xbmc --yes
sudo apt-get remove chromium-browser --yes
sudo apt-get autoremove --yes
refaire : df -h => voir la NAND restante libre : environ 736 Mo soit près de 250Mo de libérés !

# espace dev Pyduino
sudo apt-get install dreampie --yes (4MB) + modifier couleurs en light
> lancer depuis App > programming puis Edit>Preferences>Colors>Light 
sudo apt-get install python-serial --yes (0,380MB) 
cd /usr/lib/python2.7/dist-packages
sudo wget -4 -N https://raw.github.com/sensor56/pyDuino/master/pcduino/pyduino.py

########## à ce stade, vous êtes opérationnel pour tous les codes Pyduino hors multimédia ############
# pour tester que pyduino est fonctionnel
> ouvrir Dreampie
from pyduino import *
> vous devez obtenir le message d'accueil sans erreur
> ensuite, tester simplement quelques commandes : 
pinMode(2,OUTPUT)
digitalWrite(2,HIGH)

#### voir les nombreux exemples de la doc Pyduino ####
#### la suite concerne l'installation des fonctions multimédia ###

# espace dev Pyduino Multimedia
## image
guvcview (test : guvcview -s 320x240)
python-opencv
gpicview

## audio
pulseaudio 
pavucontrol
mplayer
sudo geany     /etc/mplayer/mplayer.conf et ajouter nolirc=yes
mencoder
audacity
wget -4 http://www.mon-club-elec.fr/mes_downloads/pyduino_sons.tar.gz

# voice
espeak
gespeaker

sudo geany /etc/apt/sources.list

# ajout pour pico
deb http://ports.ubuntu.com/ubuntu-ports/ precise main multiverse
deb-src http://ports.ubuntu.com/ubuntu-ports/ precise main multiverse
deb http://ports.ubuntu.com/ubuntu-ports/ precise-updates main multiverse
deb-src http://ports.ubuntu.com/ubuntu-ports/ precise-updates main multiverse
 
sudo apt-get install libttspico0 libttspico-utils libttspico-data
sox
 
## video = deja fait
python-opencv
mplayer
mencoder

## pyduino multimedia
cd /usr/lib/python2.7/dist-packages
sudo wget -4 -N https://raw.github.com/sensor56/pyDuino/master/pcduino/pyduinoMultimedia.py

# espace dev Python graphique
dreampie
python-qt4 
pyqt4-dev-tools
qt4-designer 

# installation pyqtgraph
python-numpy
python-scipy

Procedure pyqtgraph
 cd Downloads 
 wget -4 http://www.pyqtgraph.org/downloads/pyqtgraph-0.9.7.tar.gz 
 tar xvfz pyqtgraph-0.9.7.tar.gz 
 cd pyqtgraph-0.9.7 
 sudo python setup.py install 

test avec : 
 cd /usr/local/lib/python2.7/dist-packages/pyqtgraph
 python -m pyqtgraph.examples 


+/- python-qwt
+/- python-opengl 
> sudo apt-get install python-qt4-gl (0,8Mo)
>  sudo apt-get install python-opengl (6Mo)

ensuite : 
> partage fichiers NFS... 
> wifi..
> etc.. 





